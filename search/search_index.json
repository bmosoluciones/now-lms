{"config":{"lang":["en","de"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"index.html","title":"Welcome to the NOW - Learning Management System documentation.","text":"<p>The main objetive of NOW - LMS is to be a simple to {install, use, configure, mantain} learning management system (LMS).</p> <p>This is alpha software!</p>"},{"location":"index.html#getting-started","title":"Getting Started","text":"<p>To take a quick look just execute:</p> <pre><code>python3 -m venv venv\n# Linux:\nsource venv/bin/activate\n# Windows\nvenv\\Scripts\\activate.bat\npython -m pip install now_lms\npython -m now_lms\n</code></pre> <p>Visit <code>http://127.0.0.1:8080</code> in your browser and login with the default user and password: <code>lms-admin</code>. This will install NOW - LMS from the Python Package Index, NOW - LMS is also available as a OCI Image.</p>"},{"location":"CONTRIBUTING.html","title":"Contributing with NOW Learning Management System.","text":"<p>Thank you for your interest in collaborating with NOW Learning Management System. (the project).</p>"},{"location":"CONTRIBUTING.html#project-license","title":"Project License.","text":"<p>NOW LMS is free and open source software released under the Apache Version 2 license (the license of the proyect), this means that project users can:</p> <ul> <li>Use the project for profit or not.</li> <li>Modify the project to fit theirs specific needs (clearly defining the changes made to the original project).</li> </ul> <p>However, users cannot:</p> <ul> <li>Make use of the project trademarks without explicit permission.</li> <li>Require warranties of any kind; the project is distributed as is without guarantees that it may be useful for any specific purpose.</li> </ul>"},{"location":"CONTRIBUTING.html#certify-the-origin-of-your-contributions","title":"Certify the origin of your contributions.","text":"<p>To incorporate your contributions to the project we require that you certify that the contribution or contributions are your property or that you have permission from third parties to incorporate the contribution or contributions to the project, following the developer certificate of origin.</p> <p>We recommend running:</p> <pre><code>git commit -s\n</code></pre> <p>And an appropriate signature will be added to the commit, not included in the commits project without the corresponding Sing-Off.</p>"},{"location":"CONTRIBUTING.html#collaborating-with-the-project","title":"Collaborating with the project:","text":""},{"location":"CONTRIBUTING.html#ways-to-collaborate","title":"Ways to collaborate.","text":"<p>You can collaborate in different ways:</p> <ul> <li>As a developer.</li> <li>As a Quality Assurance (QA).</li> <li>Writing and improving documentation.</li> <li>Contributing ideas of new characteristics.</li> <li>Reporting bugs.</li> <li>Translating.</li> <li>Providing guidance and support to other users.</li> <li>Sharing the project with others.</li> </ul>"},{"location":"CONTRIBUTING.html#collaborating-with-the-development-of-the-project","title":"Collaborating with the development of the project:","text":"<p>The development is cross-platform, you can use both Windows, Linux or Mac to contribute the project, to collaborate with the project you need:</p> <ul> <li>Git.</li> <li>NPM.</li> <li>Python.</li> </ul> <p>Minimal Python version is: &gt;=3.7</p> <p>Technologies used:</p> <ul> <li>Backend: Flask, with a set of many libraries:</li> <li>flask-babel</li> <li>flask-caching</li> <li>flask-login</li> <li>flask-mde</li> <li>flask-reuploaded</li> <li>flask-sqlalchemy</li> <li>flask-wtf</li> <li>Frontend: Bootstrap 5.</li> <li>ORM: SQLAlchemy:</li> <li>flask-alembic</li> </ul> <p>Other libraries used in the project are:   - appdirs: App directories.   - bleach: HTML sanitisation.   - configobj: Configuration files parser.   - bcrypt: Password hashing.   - loguru: Logging.   - markdown: Render markdown as HTML.   - python-ulid: Generate uniques id.   - waitress: WSGI server.</p> <p>Development is done in the branch <code>development</code>, once the project is released for production the branch <code>main</code> will contain the latest version suitable for use in production.</p>"},{"location":"CONTRIBUTING.html#getting-the-source-code","title":"Getting the source code","text":"<pre><code>git clone https://github.com/bmosoluciones/now-lms.git\n</code></pre>"},{"location":"CONTRIBUTING.html#create-a-python-virtual-env","title":"Create a python virtual env","text":"<pre><code>python3 -m venv venv\n# Linux:\nsource venv/bin/activate\n# Windows\nvenv\\Scripts\\activate.bat\n</code></pre>"},{"location":"CONTRIBUTING.html#install-python-deps","title":"Install python deps","text":"<pre><code>python3 - m pip install -r development.txt\n</code></pre>"},{"location":"CONTRIBUTING.html#install-boostrap","title":"Install Boostrap","text":"<pre><code> cd now_lms/static/\n npm install\n cd ..\n cd ..\n</code></pre>"},{"location":"CONTRIBUTING.html#start-a-development-server","title":"Start a development server","text":"<pre><code>hupper -m now_lms\n</code></pre> <p>Please note that we use waitress as WSGI server because gunicorn do not works on Windows, hupper will live reload the WSGI server as you save changes in the source code so you will be able to work with your changes as you work, please note that changes to the jinja html templates will not trigger the server reload, only changes to python files.</p> <p>Default user and password are <code>lms-admin</code>, default url to work with the server will be <code>http://127.0.0.1:8080/</code>.</p> <p>You can disable the default cache service with:</p> <pre><code>NO_LMS_CACHE=True hupper -m now_lms\n</code></pre>"},{"location":"CONTRIBUTING.html#style-guide","title":"Style Guide:","text":"<p>PEP8 with a maximum line length of 127 characters.</p>"},{"location":"CONTRIBUTING.html#database-support","title":"Database Support","text":"<p>These database are supported:</p> <ul> <li>SQLite</li> <li>Postgres</li> <li>MySQL</li> </ul> <p>These database should work:</p> <ul> <li>MariaDB</li> </ul>"},{"location":"CONTRIBUTING.html#sqlite","title":"SQLite","text":"<p>SQLite works out of the box, to test NOW - LMS with SQLite just run:</p> <pre><code>python -m pytest  -v --exitfirst --cov=now_lms\n</code></pre>"},{"location":"CONTRIBUTING.html#postgres","title":"Postgres","text":"<p>To test NOW - LMS with Postgres follow this steps:</p> <pre><code>sudo dnf install postgresql-server postgresql-contrib\nsudo postgresql-setup --initdb --unit postgresql\nsudo systemctl start postgresql\nsudo -u postgres psql\npostgres=# CREATE USER postgresdb WITH PASSWORD 'postgresdb';\npostgres=# CREATE DATABASE postgresdb OWNER postgresdb;\npostgres=# \\q\n</code></pre> <p>Allow connet with user and password:</p> <pre><code>sudo gedit /var/lib/pgsql/data/pg_hba.conf\nAnd edit host all all 127.0.0.1/32 ident to host all all 127.0.0.1/32 md5\n</code></pre> <p>Run the test with postgres:</p> <pre><code>DATABASE_URL=postgresql://postgresdb:postgresdb@127.0.0.1:5432/postgresdb pytest  -v --exitfirst --cov=now_lms\n</code></pre>"},{"location":"CONTRIBUTING.html#mysql","title":"MySQL","text":"<p>To test NOW - LMS with MySQL follos this steps:</p> <pre><code>sudo dnf install community-mysql-server -y\nsudo systemctl start mysqld\nsudo mysql_secure_installation\nsudo mysql -u root -p\nCREATE USER 'mysqldatabase'@'localhost' IDENTIFIED BY 'mysqldatabase';\nCREATE DATABASE mysqldatabase;\nGRANT ALL PRIVILEGES ON mysqldatabase.* TO 'mysqldatabase'@'localhost';\nFLUSH PRIVILEGES;\n</code></pre> <p>For the most the users, this script will work fine but if it asks you for the password, you can retrieve a temporary password from mysqld.log at /var/log/ by the given command:</p> <pre><code>sudo grep 'temporary password' /var/log/mysqld.log\n</code></pre> <p>Now you can test NOW - LMS with MySQL running:</p> <pre><code>DATABASE_URL=mysql://mysqldatabase:mysqldatabase@127.0.0.1:3306/mysqldatabase pytest  -v --exitfirst --cov=now_lms\n</code></pre>"},{"location":"db.html","title":"Database setup","text":""},{"location":"dev_ops.html","title":"Other deployment options","text":"<p>There are templates available to deploy Now - LMS to these [PAID] services:</p> <p> </p>"},{"location":"dev_ops.html#render","title":"Render","text":"<p>On render you can host NOW-LMS for free, just set your project settings as follow:</p> <pre><code>Build Command: pip install -r requirements.txt &amp;&amp; cd now_lms/static/ &amp;&amp; npm install\nStart Command: python -m now_lms\n</code></pre> <p>Important: You can test NOW-LMS for free on Render, but with the default configuration NOW LMS will use a SQLite database as data store, this database is not goin to persist after system upgrades, to keep your data safe ve sure to set the next enviroment variables:</p> <pre><code>DATABASE_URL=proper_db_connet_string\n</code></pre> <p>Note that you can host a tiny up to 20MB PostgreSQL database for free in elephantsql.</p>"},{"location":"dreamhost.html","title":"Install NOW - LMS in DreamHost shared host.","text":"<p>NOW - Learning Management System can be hosted at DreamHost shared hosting service, this is usefull if you alredy have a host plan in DreamHost and you want to serve a few users, in a shared hosting enviroment there will be some limitations like no separate cache service or memory constraints, but if you alredy have a host plan in DreamHost adding NOW - Learning Management System  can be handy.</p> <p>Last update: 2023 Jan 26</p> <ol> <li> <p>Setup your domain with Passenger support.</p> </li> <li> <p>Login via SSH to your host.</p> </li> <li> <p>Install a recent version of python:</p> </li> </ol> <pre><code>$ mkdir ~/py3_tmp\n$ cd ~/py3_tmp/\n$ wget https://www.python.org/ftp/python/3.10.9/Python-3.10.9.tar.xz\n$ tar -xf Python-3.10.9.tar.xz\n$ cd Python-3.10.9\n$ ./configure --prefix=$HOME/opt/python-3.10.9\n$ make\n$ make install\n$ $HOME/opt/python-3.10.9/bin/python3 --version\nPython 3.10.9\n</code></pre> <ol> <li>Go to your domain folder:</li> </ol> <pre><code>$ cd you.domain\n</code></pre> <ol> <li>Create a python virtual enviroment:</li> </ol> <pre><code>$HOME/opt/python-3.10.9/bin/python3 -m venv venv\n</code></pre> <ol> <li>Activate the virtual env:</li> </ol> <pre><code>$ source venv/bin/activate\n</code></pre> <ol> <li>Install NOW - LMS:</li> </ol> <pre><code>$ pip install now_lms\n</code></pre> <ol> <li>Go to the public directory in your.domain directory:</li> </ol> <pre><code>$ cd public\n</code></pre> <ol> <li>Create a app.py file following this template:</li> </ol> <pre><code>from now_lms import lms_app\n# Configure your app:\nlms_app.config[\"ADMIN_USER\"] = \"your_admin_user\"\nlms_app.config[\"ADMIN_PSWD\"] = \"your_admin_user_password\"\nlms_app.config[\"SECRET_KEY\"] = \"set_a_very_secure_secret_key\"\nlms_app.config[\"SQLALCHEMY_DATABASE_URI\"] = \"database_uri\"\n\napp = lms_app\n</code></pre> <ol> <li>Init app: Be sure to run <code>lmsctl</code> commands in the same directory that your app.py file.</li> </ol> <pre><code>$ lmsctl setup\n</code></pre> <ol> <li>Your your.domain/public directory should be like this:</li> </ol> <pre><code>$ ls\napp.py  favicon.gif  favicon.ico\n</code></pre> <ol> <li>Create a passenger_wsgi.py file in your.domain directory following the next template:</li> </ol> <pre><code>import sys, os\n\nINTERP = os.path.join(os.environ[\"HOME\"], \"yourdomain.com\", \"venv\", \"bin\", \"python3\")\nif sys.executable != INTERP:\n    os.execl(INTERP, INTERP, *sys.argv)\nsys.path.append(os.getcwd())\n\nfrom now_lms import lms_app\n# Copy paste the same configuration from /public/app.py\nlms_app.config[\"SECRET_KEY\"] = \"set_a_very_secure_secret_key\"\nlms_app.config[\"SQLALCHEMY_DATABASE_URI\"] = \"database_uri\"\n# Or set proper ENVIROMENT VARIABLES\n\n application = lms_app\n</code></pre> <ol> <li>You your.dommain folder should be like this:</li> </ol> <pre><code>$ ls\npassenger_wsgi.py venv public\n</code></pre> <ol> <li>Restart passenger:</li> </ol> <pre><code>mkdir public/tmp\ntouch tmp/restart.txt\n</code></pre> <ol> <li>You should be able to acces NOW - LMS in your domain.</li> </ol>"},{"location":"oci.html","title":"Install NOW - LMS with the OCI image.","text":""},{"location":"oci.html#oci-image","title":"OCI Image","text":"<p>There is also a OCI image disponible if you prefer to user containers, in this example we use podman:</p> <pre><code># &lt;---------------------------------------------&gt; #\n# Install the podman command line tool.\n# DNF family (CentOS, Rocky, Alma):\nsudo dnf -y install podman\n\n# APT family (Debian, Ubuntu):\nsudo apt install -y podman\n\n# OpenSUSE:\nsudo zypper in podman\n\n\n# &lt;---------------------------------------------&gt; #\n# Run the software.\n# Create a new pod:\npodman pod create --name now-lms -p 80:80 -p 443:443\n\n# Database:\npodman run --pod now-lms --rm --name now-lms-db --volume now-lms-postgresql-backup:/var/lib/postgresql/data -e POSTGRES_DB=nowlearning -e POSTGRES_USER=nowlearning -e POSTGRES_PASSWORD=nowlearning -d postgres:13\n\n# App:\npodman run --pod now-lms --rm --name now-lms-app -e LMS_KEY=nsjksldknsdlkdsljdnsdj\u00f1as\u00f1\u00f1qld\u00f1aas554dlkallas -e LMS_DB=postgresql+pg8000://nowlearning:nowlearning@localhost:5432/nowlearning -e LMS_USER=administrator -e LMS_PSWD=administrator -d quay.io/bmosoluciones/now-lms\n\n# Web Server\n# Download nginx configuration template:\ncd\nmkdir now_lms_dir\ncd now_lms_dir\ncurl -O https://raw.githubusercontent.com/bmosoluciones/now-lms/main/docs/nginx.conf\n\n# In the same directoy run the web server pod:\npodman run --pod now-lms --name now-lms-server --rm -v $PWD/nginx.conf:/etc/nginx/nginx.conf:ro -d nginx:stable\n\n</code></pre> <p>NOW-LMS also will work with MySQL or MariaDB just change the image of the database container and set the correct connect string. SQLite also will work if you will serve a few users.</p>"},{"location":"pypi.html","title":"Install NOW - LMS with the phyton package.","text":"<p>NOW - Learning Management System makes public releases as python packages on pypi, this packages can be installed via the pip tool with:</p> <pre><code>$ pip install now_lms\npython -m now_lms\n</code></pre> <p>Visit http://127.0.0.1:8080/ in your browser, default user and password are <code>lms-admin</code></p>"},{"location":"sing-off.html","title":"Developer Certificate of Origin","text":"<p>Developer Certificate of Origin Version 1.1</p> <p>Copyright (C) 2004, 2006 The Linux Foundation and its contributors.</p> <p>Everyone is permitted to copy and distribute verbatim copies of this license document, but changing it is not allowed.</p> <p>Developer's Certificate of Origin 1.1</p> <p>By making a contribution to this project, I certify that:</p> <p>(a) The contribution was created in whole or in part by me and I     have the right to submit it under the open source license     indicated in the file; or</p> <p>(b) The contribution is based upon previous work that, to the best     of my knowledge, is covered under an appropriate open source     license and I have the right under that license to submit that     work with modifications, whether created in whole or in part     by me, under the same open source license (unless I am     permitted to submit under a different license), as indicated     in the file; or</p> <p>(c) The contribution was provided directly to me by some other     person who certified (a), (b) or (c) and I have not modified     it.</p> <p>(d) I understand and agree that this project and the contribution     are public and that a record of the contribution (including all     personal information I submit with it, including my sign-off) is     maintained indefinitely and may be redistributed consistent with     this project or the open source license(s) involved.</p>"}]}